"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n\nvar _s = $RefreshSig$();\n\n\nconst CONTRACT_ABI = [\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"jobId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"feeWallet\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"recipientAmount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"feeAmount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"JobCompleted\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"jobId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"JobFunded\",\n        \"type\": \"event\"\n    },\n    {\n        \"anonymous\": false,\n        \"inputs\": [\n            {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"jobId\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"poster\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"string\",\n                \"name\": \"details\",\n                \"type\": \"string\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"address\",\n                \"name\": \"feeWallet\",\n                \"type\": \"address\"\n            },\n            {\n                \"indexed\": false,\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"JobPosted\",\n        \"type\": \"event\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"jobId\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"confirmDelivery\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"jobCount\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"jobs\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"poster\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"feeWallet\",\n                \"type\": \"address\"\n            },\n            {\n                \"internalType\": \"string\",\n                \"name\": \"details\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"amount\",\n                \"type\": \"uint256\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"funded\",\n                \"type\": \"bool\"\n            },\n            {\n                \"internalType\": \"bool\",\n                \"name\": \"completed\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [\n            {\n                \"internalType\": \"string\",\n                \"name\": \"details\",\n                \"type\": \"string\"\n            },\n            {\n                \"internalType\": \"address\",\n                \"name\": \"recipient\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"postJob\",\n        \"outputs\": [\n            {\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n    },\n    {\n        \"inputs\": [],\n        \"name\": \"FEE_WALLET\",\n        \"outputs\": [\n            {\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }\n];\nconst CONTRACT_ADDRESS = \"0x233D7487e447248DF9f71C6db46e8454254EB808\";\nfunction Home() {\n    _s();\n    // Poll backend for delivery confirmation and release funds\n    async function pollDeliveryConfirmation(jobId) {\n        const interval = setInterval(async ()=>{\n            try {\n                const res = await fetch(\"http://localhost:3001/job/\".concat(jobId, \"/status\"));\n                const data = await res.json();\n                if (data.status === \"confirmed\") {\n                    clearInterval(interval);\n                    setStatus(\"Delivery confirmed for job \".concat(jobId, \". Funds released!\"));\n                }\n            } catch (err) {\n                console.error(\"Error polling delivery confirmation:\", err);\n            }\n        }, 5000); // Poll every 5 seconds\n    }\n    // Call confirmDelivery on the contract\n    async function releaseFunds(jobId) {\n        try {\n            let provider;\n            if (window.sei) {\n                provider = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.BrowserProvider(window.sei);\n            } else if (window.ethereum) {\n                provider = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.BrowserProvider(window.ethereum);\n            } else {\n                setStatus(\"No Sei or EVM wallet found\");\n                return;\n            }\n            const signer = await provider.getSigner();\n            const contract = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, signer);\n            const tx = await contract.confirmDelivery(jobId);\n            setStatus(\"Funds released! Transaction: \".concat(tx.hash));\n            await tx.wait();\n        } catch (err) {\n            setStatus(\"Error releasing funds: \".concat(err.message));\n            console.error(\"Error releasing funds:\", err);\n        }\n    }\n    const [walletAddress, setWalletAddress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [details, setDetails] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [recipient, setRecipient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [amount, setAmount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [jobId, setJobId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    async function connectWallet() {\n        let accounts;\n        // Prompt user to switch to Sei EVM network if using MetaMask or EVM wallet\n        if (window.ethereum) {\n            // Check if we're already on Sei Pacific-1 Mainnet or Testnet\n            const currentChainId = await window.ethereum.request({\n                method: \"eth_chainId\"\n            });\n            const seiMainnetChainId = \"0xaef13\"; // 716819 in hex (Sei Pacific-1 Mainnet)\n            const seiTestnetChainId = \"0x530\"; // 1328 in hex (Sei EVM Testnet)\n            // If already on Sei Pacific-1 Mainnet, continue\n            if (currentChainId === seiMainnetChainId) {\n                setStatus(\"Connected to Sei Pacific-1 Mainnet\");\n            } else {\n                // Otherwise, try to switch to testnet first\n                try {\n                    await window.ethereum.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [\n                            {\n                                chainId: seiTestnetChainId\n                            }\n                        ]\n                    });\n                } catch (switchError) {\n                    // If testnet is not added, try to add it\n                    if (switchError.code === 4902) {\n                        try {\n                            await window.ethereum.request({\n                                method: \"wallet_addEthereumChain\",\n                                params: [\n                                    {\n                                        chainId: seiTestnetChainId,\n                                        chainName: \"Sei EVM Testnet\",\n                                        rpcUrls: [\n                                            \"https://evm-rpc-testnet.sei-apis.com\"\n                                        ],\n                                        nativeCurrency: {\n                                            name: \"Sei\",\n                                            symbol: \"SEI\",\n                                            decimals: 18\n                                        },\n                                        blockExplorerUrls: [\n                                            \"https://seitrace.com\"\n                                        ]\n                                    }\n                                ]\n                            });\n                        } catch (addError) {\n                            // If testnet add fails, try to add mainnet\n                            try {\n                                await window.ethereum.request({\n                                    method: \"wallet_addEthereumChain\",\n                                    params: [\n                                        {\n                                            chainId: seiMainnetChainId,\n                                            chainName: \"Sei Pacific-1\",\n                                            rpcUrls: [\n                                                \"https://evm-rpc.sei-apis.com\"\n                                            ],\n                                            nativeCurrency: {\n                                                name: \"Sei\",\n                                                symbol: \"SEI\",\n                                                decimals: 18\n                                            },\n                                            blockExplorerUrls: [\n                                                \"https://seitrace.com\"\n                                            ]\n                                        }\n                                    ]\n                                });\n                                setStatus(\"Added Sei Pacific-1 Mainnet to MetaMask.\");\n                            } catch (mainnetAddError) {\n                                setStatus(\"Failed to add Sei networks to MetaMask.\");\n                                return;\n                            }\n                        }\n                    } else {\n                        setStatus(\"Failed to switch to Sei network. Continuing with current network.\");\n                    }\n                }\n            }\n        }\n        if (window.sei) {\n            setStatus(\"Sei Global Wallet detected. Connecting...\");\n            try {\n                accounts = await window.sei.request({\n                    method: \"eth_requestAccounts\"\n                });\n                setWalletAddress(accounts[0]);\n                setStatus(\"Wallet connected: \" + accounts[0]);\n            } catch (err) {\n                setStatus(\"Wallet connection failed\");\n                return;\n            }\n        } else if (window.ethereum) {\n            setStatus(\"EVM wallet detected. Connecting...\");\n            try {\n                accounts = await window.ethereum.request({\n                    method: \"eth_requestAccounts\"\n                });\n                setWalletAddress(accounts[0]);\n                setStatus(\"Wallet connected: \" + accounts[0]);\n            } catch (err) {\n                setStatus(\"Wallet connection failed\");\n                return;\n            }\n        } else {\n            setStatus(\"No Sei or EVM wallet found. Please install Compass Wallet for Sei.\");\n            return;\n        }\n        // Determine which RPC to use based on current chain\n        const currentChainId = await window.ethereum.request({\n            method: \"eth_chainId\"\n        });\n        const isMainnet = currentChainId === \"0xaef13\";\n        const rpcUrl = isMainnet ? \"https://evm-rpc.sei-apis.com\" : \"https://evm-rpc-testnet.sei-apis.com\";\n        const seiProvider = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.JsonRpcProvider(rpcUrl);\n        try {\n            const balance = await seiProvider.getBalance(accounts[0]);\n            const networkName = isMainnet ? \"Mainnet\" : \"Testnet\";\n            setStatus(\"Wallet connected: \".concat(accounts[0], \". Balance: \").concat(ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.formatEther(balance), \" SEI (\").concat(networkName, \")\"));\n        } catch (err) {\n            setStatus(\"Wallet connected: \".concat(accounts[0], \". Error fetching balance.\"));\n        }\n    }\n    // ...existing code...\n    async function postJob() {\n        console.log(\"Post Job clicked\");\n        try {\n            let provider;\n            if (window.sei) {\n                provider = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.BrowserProvider(window.sei);\n                console.log(\"Using Sei Global Wallet for EVM\");\n            } else if (window.ethereum) {\n                provider = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.BrowserProvider(window.ethereum);\n                console.log(\"Using EVM wallet\");\n            } else {\n                setStatus(\"No Sei or EVM wallet found\");\n                console.error(\"No Sei or EVM wallet found\");\n                return;\n            }\n            // Validate recipient address\n            if (!/^0x[a-fA-F0-9]{40}$/.test(recipient)) {\n                setStatus(\"Invalid recipient address\");\n                console.error(\"Invalid recipient address\", recipient);\n                return;\n            }\n            // Validate amount\n            let parsedAmount;\n            try {\n                parsedAmount = ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.parseEther(amount);\n            } catch (err) {\n                setStatus(\"Invalid amount format\");\n                console.error(\"Invalid amount format\", err, amount);\n                return;\n            }\n            if (parsedAmount <= 0) {\n                setStatus(\"Amount must be greater than 0\");\n                console.error(\"Amount must be greater than 0\", parsedAmount);\n                return;\n            }\n            // Check current network and use appropriate RPC\n            const currentChainId = await window.ethereum.request({\n                method: \"eth_chainId\"\n            });\n            const isMainnet = currentChainId === \"0xaef13\";\n            const rpcUrl = isMainnet ? \"https://evm-rpc.sei-apis.com\" : \"https://evm-rpc-testnet.sei-apis.com\";\n            // Check wallet balance before posting job\n            const seiProvider = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.JsonRpcProvider(rpcUrl);\n            const balance = await seiProvider.getBalance(walletAddress);\n            const networkName = isMainnet ? \"Mainnet\" : \"Testnet\";\n            console.log(\"Wallet balance (SEI) on \".concat(networkName, \":\"), ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.formatEther(balance));\n            if (balance < parsedAmount) {\n                setStatus(\"Insufficient wallet balance. Balance: \".concat(ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.formatEther(balance), \" SEI (\").concat(networkName, \")\"));\n                console.error(\"Insufficient wallet balance.\", balance, parsedAmount);\n                return;\n            }\n            // Additional validation before contract call\n            if (recipient.toLowerCase() === walletAddress.toLowerCase()) {\n                setStatus(\"Error: Recipient cannot be the same as sender\");\n                return;\n            }\n            // Check minimum amount (0.001 SEI)\n            const minAmount = ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.parseEther(\"0.001\");\n            if (parsedAmount < minAmount) {\n                setStatus(\"Error: Minimum 0.001 SEI required\");\n                return;\n            }\n            console.log(\"Contract details:\", {\n                address: CONTRACT_ADDRESS,\n                details,\n                recipient,\n                amount: ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.formatEther(parsedAmount),\n                sender: walletAddress\n            });\n            const signer = await provider.getSigner();\n            const contract = new ethers__WEBPACK_IMPORTED_MODULE_2__.ethers.Contract(CONTRACT_ADDRESS, CONTRACT_ABI, signer);\n            try {\n                // Estimate gas first\n                const gasEstimate = await contract.postJob.estimateGas(details, recipient, {\n                    value: parsedAmount\n                });\n                console.log(\"Gas estimate:\", gasEstimate.toString());\n                const tx = await contract.postJob(details, recipient, {\n                    value: parsedAmount,\n                    gasLimit: gasEstimate * 2n\n                });\n                console.log(\"Transaction sent:\", tx.hash);\n                setStatus(\"Transaction sent: \".concat(tx.hash, \". Waiting for confirmation...\"));\n                const receipt = await tx.wait();\n                console.log(\"Transaction confirmed:\", receipt);\n                // Extract real jobId from transaction events\n                let jobId = null;\n                console.log(\"Transaction receipt logs:\", receipt.logs);\n                if (receipt.logs && receipt.logs.length > 0) {\n                    try {\n                        // Try to parse each log to find JobPosted event\n                        for (const log of receipt.logs){\n                            try {\n                                const parsedLog = contract.interface.parseLog({\n                                    topics: log.topics,\n                                    data: log.data\n                                });\n                                console.log(\"Parsed log:\", parsedLog);\n                                if (parsedLog && parsedLog.name === \"JobPosted\") {\n                                    jobId = parsedLog.args.jobId.toString();\n                                    console.log(\"Found JobPosted event with jobId:\", jobId);\n                                    break;\n                                }\n                            } catch (parseError) {\n                                console.log(\"Could not parse log:\", parseError.message);\n                                continue;\n                            }\n                        }\n                    } catch (e) {\n                        console.error(\"Error parsing transaction logs:\", e);\n                    }\n                }\n                // Alternative: get jobId from contract function return value if available\n                if (!jobId && receipt.logs.length > 0) {\n                    try {\n                        // The postJob function returns the jobId, try to get it from call result\n                        const currentJobCount = await contract.jobCount();\n                        jobId = currentJobCount.toString();\n                        console.log(\"Got jobId from contract jobCount:\", jobId);\n                    } catch (e) {\n                        console.error(\"Error getting jobCount:\", e);\n                    }\n                }\n                // Fallback to mock jobId if we couldn't extract the real one\n                if (!jobId) {\n                    jobId = Math.floor(Math.random() * 1000000);\n                    console.log(\"Using fallback jobId (this should not happen):\", jobId);\n                }\n                // Notify backend\n                await fetch(\"http://localhost:3001/job\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        jobId\n                    })\n                });\n                setStatus(\"Job posted successfully! Job ID: \".concat(jobId, \". Backend notified.\"));\n                // Start polling for delivery confirmation\n                pollDeliveryConfirmation(jobId);\n            } catch (txErr) {\n                console.error(\"Full error object:\", txErr);\n                // Better error parsing\n                let errorMessage = \"Error posting job: \";\n                if (txErr.reason) {\n                    errorMessage += txErr.reason;\n                } else if (txErr.message) {\n                    errorMessage += txErr.message;\n                } else if (txErr.data) {\n                    errorMessage += \"Transaction reverted\";\n                } else {\n                    errorMessage += \"Unknown error\";\n                }\n                setStatus(errorMessage);\n                if (txErr === null || txErr === void 0 ? void 0 : txErr.receipt) {\n                    console.error(\"Transaction receipt:\", txErr.receipt);\n                }\n            }\n        } catch (err) {\n            setStatus(\"Error: \" + ((err === null || err === void 0 ? void 0 : err.message) || err));\n            console.error(\"Error posting job:\", err);\n        }\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            padding: \"2rem\",\n            fontFamily: \"sans-serif\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                children: \"Sei Delivery Platform\"\n            }, void 0, false, {\n                fileName: \"/Users/vine/elco/sei-so/pages/index.js\",\n                lineNumber: 351,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: connectWallet,\n                children: \"Connect Wallet\"\n            }, void 0, false, {\n                fileName: \"/Users/vine/elco/sei-so/pages/index.js\",\n                lineNumber: 352,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    marginTop: \"1rem\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            \"Status: \",\n                            status\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/vine/elco/sei-so/pages/index.js\",\n                        lineNumber: 354,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            \"Wallet: \",\n                            walletAddress\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/vine/elco/sei-so/pages/index.js\",\n                        lineNumber: 355,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/vine/elco/sei-so/pages/index.js\",\n                lineNumber: 353,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                onSubmit: (e)=>{\n                    e.preventDefault();\n                    postJob();\n                },\n                style: {\n                    marginTop: \"2rem\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Job Details\",\n                        value: details,\n                        onChange: (e)=>setDetails(e.target.value),\n                        style: {\n                            marginRight: \"1rem\"\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/vine/elco/sei-so/pages/index.js\",\n                        lineNumber: 364,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Recipient Address\",\n                        value: recipient,\n                        onChange: (e)=>setRecipient(e.target.value),\n                        style: {\n                            marginRight: \"1rem\"\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/vine/elco/sei-so/pages/index.js\",\n                        lineNumber: 371,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Amount (SEI)\",\n                        value: amount,\n                        onChange: (e)=>setAmount(e.target.value),\n                        style: {\n                            marginRight: \"1rem\"\n                        }\n                    }, void 0, false, {\n                        fileName: \"/Users/vine/elco/sei-so/pages/index.js\",\n                        lineNumber: 378,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        type: \"submit\",\n                        children: \"Post Job\"\n                    }, void 0, false, {\n                        fileName: \"/Users/vine/elco/sei-so/pages/index.js\",\n                        lineNumber: 385,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/vine/elco/sei-so/pages/index.js\",\n                lineNumber: 357,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/vine/elco/sei-so/pages/index.js\",\n        lineNumber: 350,\n        columnNumber: 5\n    }, this);\n}\n_s(Home, \"YkiS7FGy19AuTKZScknO54wKbUY=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n"));

/***/ })

});